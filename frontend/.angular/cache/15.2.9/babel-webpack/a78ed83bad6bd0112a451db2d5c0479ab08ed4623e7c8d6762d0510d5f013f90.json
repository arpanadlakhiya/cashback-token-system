{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/service/payment-service.service\";\nimport * as i3 from \"@angular/common\";\nfunction PaymentboardComponent_option_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 29);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const user_r5 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", user_r5);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", user_r5, \" \");\n  }\n}\nfunction PaymentboardComponent_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 30);\n    i0.ɵɵtext(1, \" Atleast one user is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PaymentboardComponent_div_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 30);\n    i0.ɵɵtext(1, \" Amount is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PaymentboardComponent_div_30_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 30);\n    i0.ɵɵtext(1, \" Token is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PaymentboardComponent_div_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16)(1, \"label\", 31);\n    i0.ɵɵtext(2, \"Cashback Token\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 9)(4, \"div\", 10)(5, \"span\", 11);\n    i0.ɵɵelement(6, \"i\", 32);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(7, \"input\", 33);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(8, PaymentboardComponent_div_30_div_8_Template, 2, 0, \"div\", 15);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_0_0 = ctx_r3.userForm.get(\"token\")) == null ? null : tmp_0_0.invalid) && ((tmp_0_0 = ctx_r3.userForm.get(\"token\")) == null ? null : tmp_0_0.touched));\n  }\n}\nfunction PaymentboardComponent_div_31_option_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 29);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const offer_r9 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", offer_r9);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", offer_r9, \" \");\n  }\n}\nfunction PaymentboardComponent_div_31_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 30);\n    i0.ɵɵtext(1, \" offers is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PaymentboardComponent_div_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 34)(1, \"label\", 35);\n    i0.ɵɵtext(2, \"Offers\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 9)(4, \"div\", 10)(5, \"span\", 11);\n    i0.ɵɵelement(6, \"i\", 36);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"select\", 37)(8, \"option\", 38);\n    i0.ɵɵtext(9, \"Select your option\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(10, PaymentboardComponent_div_31_option_10_Template, 2, 2, \"option\", 14);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(11, PaymentboardComponent_div_31_div_11_Template, 2, 0, \"div\", 15);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    let tmp_1_0;\n    i0.ɵɵadvance(10);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r4.offerData);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_1_0 = ctx_r4.userForm.get(\"offers\")) == null ? null : tmp_1_0.invalid) && ((tmp_1_0 = ctx_r4.userForm.get(\"offers\")) == null ? null : tmp_1_0.touched));\n  }\n}\nexport class PaymentboardComponent {\n  constructor(formBuilder, service) {\n    this.formBuilder = formBuilder;\n    this.service = service;\n    this.userInfo = {\n      firstName: 'Rohan',\n      lastName: 'Parasad',\n      email: 'rohan.prasad234@gmail.com'\n    };\n    this.userData = [];\n    this.offerData = [];\n    this.ifAvailable = false;\n    this.added = false;\n    this.ifOffers = false;\n  }\n  ngOnInit() {\n    this.initiateForm();\n    this.getUsers();\n  }\n  initiateForm() {\n    this.userForm = this.formBuilder.group({\n      user: ['', Validators.required],\n      token: ['', Validators.required],\n      amount: ['', Validators.required],\n      offers: ['', Validators.required]\n    });\n  }\n  onSubmit() {\n    if (this.userForm.valid) {\n      // Form is valid, perform form submission or data handling logic\n      console.log(this.userForm.value);\n    }\n  }\n  getUsers() {\n    this.service.getAllUsers().subscribe(data => data.forEach(element => {\n      this.userData.push(element.name);\n    }));\n  }\n  getOffers() {\n    this.service.getAllOffers().subscribe(data => data.forEach(element => {\n      if (!this.added) {\n        this.offerData.push(element.name);\n      }\n    }));\n    this.added = true;\n  }\n  get token() {\n    return this.userForm.get('token');\n  }\n  get amount() {\n    return this.userForm.get('amount');\n  }\n  checkAvailability() {\n    if (this.amount?.invalid) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n  getTokens() {\n    if (this.checkAvailability()) {\n      this.userForm.patchValue({\n        token: 5\n      });\n      this.getOffers();\n      this.ifOffers = true;\n    } else {\n      this.ifOffers = false;\n    }\n  }\n}\nPaymentboardComponent.ɵfac = function PaymentboardComponent_Factory(t) {\n  return new (t || PaymentboardComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.PaymentServiceService));\n};\nPaymentboardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: PaymentboardComponent,\n  selectors: [[\"app-paymentboard\"]],\n  decls: 42,\n  vars: 7,\n  consts: [[1, \"profile\", 2, \"padding\", \"80px\"], [1, \"card\"], [1, \"content-card\", \"p-5\", \"pt-4\"], [1, \"heading\", \"mb-3\"], [1, \"form\"], [1, \"userForm\", 3, \"formGroup\", \"ngSubmit\"], [1, \"d-flex\", \"flex-lg-row\", \"flex-md-column\", \"gap-3\"], [1, \"gender\", \"form-group\", \"w-100\"], [\"for\", \"user\", 1, \"mb-2\"], [1, \"input-group\"], [1, \"input-group-prepend\"], [1, \"input-group-text\"], [1, \"bi\", \"bi-person-circle\"], [\"id\", \"user\", \"formControlName\", \"user\", \"required\", \"\", 1, \"form-control\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [1, \"address\", \"form-group\", \"w-100\"], [\"for\", \"amount\", 1, \"mb-2\"], [1, \"bi\", \"bi-currency-rupee\"], [\"type\", \"text\", \"id\", \"amount\", \"formControlName\", \"amount\", \"required\", \"\", 1, \"form-control\"], [1, \"btn\", \"btn-info\", \"mt-3\", \"btn-block\", 3, \"click\"], [\"class\", \"address form-group w-100\", 4, \"ngIf\"], [\"class\", \"offers form-group w-100\", 4, \"ngIf\"], [\"type\", \"submit\", \"data-bs-toggle\", \"modal\", \"data-bs-target\", \"#exampleModal\", 1, \"btn\", \"btn-info\", \"mt-3\", \"btn-block\", 3, \"disabled\"], [\"id\", \"exampleModal\", \"tabindex\", \"-1\", \"aria-labelledby\", \"exampleModalLabel\", \"aria-hidden\", \"true\", 1, \"modal\", \"fade\"], [1, \"modal-dialog\", \"modal-dialog-centered\"], [1, \"modal-content\"], [1, \"modal-body\"], [\"src\", \"../../../assets/success.gif\", \"alt\", \"success\"], [3, \"value\"], [1, \"text-danger\"], [\"for\", \"Token\", 1, \"mb-2\"], [1, \"bi\", \"bi-coin\"], [\"type\", \"text\", \"id\", \"token\", \"formControlName\", \"token\", \"required\", \"\", 1, \"form-control\"], [1, \"offers\", \"form-group\", \"w-100\"], [\"for\", \"offers\", 1, \"mb-2\"], [1, \"bi\", \"bi-ticket-perforated\"], [\"id\", \"offers\", \"formControlName\", \"offers\", \"placeholder\", \"Select Available Offers\", \"required\", \"\", 1, \"form-control\"], [\"value\", \"\", \"disabled\", \"\", \"selected\", \"\"]],\n  template: function PaymentboardComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3);\n      i0.ɵɵtext(4, \"Account\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"div\")(6, \"div\", 4)(7, \"form\", 5);\n      i0.ɵɵlistener(\"ngSubmit\", function PaymentboardComponent_Template_form_ngSubmit_7_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(8, \"div\", 6)(9, \"div\", 7)(10, \"label\", 8);\n      i0.ɵɵtext(11, \"Select Payee\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"div\", 9)(13, \"div\", 10)(14, \"span\", 11);\n      i0.ɵɵelement(15, \"i\", 12);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(16, \"select\", 13);\n      i0.ɵɵtemplate(17, PaymentboardComponent_option_17_Template, 2, 2, \"option\", 14);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(18, PaymentboardComponent_div_18_Template, 2, 0, \"div\", 15);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(19, \"div\", 16)(20, \"label\", 17);\n      i0.ɵɵtext(21, \"Amount\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"div\", 9)(23, \"div\", 10)(24, \"span\", 11);\n      i0.ɵɵelement(25, \"i\", 18);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(26, \"input\", 19);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(27, PaymentboardComponent_div_27_Template, 2, 0, \"div\", 15);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(28, \"button\", 20);\n      i0.ɵɵlistener(\"click\", function PaymentboardComponent_Template_button_click_28_listener() {\n        return ctx.getTokens();\n      });\n      i0.ɵɵtext(29, \" Check Offers \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(30, PaymentboardComponent_div_30_Template, 9, 1, \"div\", 21);\n      i0.ɵɵtemplate(31, PaymentboardComponent_div_31_Template, 12, 2, \"div\", 22);\n      i0.ɵɵelement(32, \"div\", 6);\n      i0.ɵɵelementStart(33, \"button\", 23);\n      i0.ɵɵtext(34, \" Pay Now \");\n      i0.ɵɵelementEnd()()()()()();\n      i0.ɵɵelementStart(35, \"div\", 24)(36, \"div\", 25)(37, \"div\", 26)(38, \"div\", 27);\n      i0.ɵɵelement(39, \"img\", 28);\n      i0.ɵɵelementStart(40, \"p\");\n      i0.ɵɵtext(41, \"Payment Successful!!!\");\n      i0.ɵɵelementEnd()()()()()();\n    }\n    if (rf & 2) {\n      let tmp_2_0;\n      let tmp_3_0;\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"formGroup\", ctx.userForm);\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"ngForOf\", ctx.userData);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx.userForm.get(\"user\")) == null ? null : tmp_2_0.invalid) && ((tmp_2_0 = ctx.userForm.get(\"user\")) == null ? null : tmp_2_0.touched));\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_3_0 = ctx.userForm.get(\"amount\")) == null ? null : tmp_3_0.invalid) && ((tmp_3_0 = ctx.userForm.get(\"amount\")) == null ? null : tmp_3_0.touched));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.ifOffers);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.ifOffers);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"disabled\", ctx.userForm.invalid);\n    }\n  },\n  dependencies: [i3.NgForOf, i3.NgIf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"@keyframes _ngcontent-%COMP%_slideInTopFade {\\n  from {\\n    transform: translateY(-5%);\\n    opacity: 0;\\n  }\\n  to {\\n    transform: translateY(0);\\n    opacity: 1;\\n  }\\n}\\n.profile[_ngcontent-%COMP%] {\\n  animation: _ngcontent-%COMP%_slideInTopFade 0.6s ease-in;\\n  background-color: #f1f5f9;\\n  height: 100vh;\\n}\\n.profile[_ngcontent-%COMP%]   .heading[_ngcontent-%COMP%] {\\n  font-family: \\\"Helvetica Neue\\\", Helvetica, Arial, sans-serif;\\n  letter-spacing: 1px;\\n  font-weight: bolder;\\n  font-size: 2.25rem;\\n  line-height: 1.2;\\n}\\n.profile[_ngcontent-%COMP%]   .profile-picture[_ngcontent-%COMP%] {\\n  height: 100px;\\n  width: 100px;\\n  border-radius: 50%;\\n  background-color: #d1d7e0;\\n}\\n\\nbutton[_ngcontent-%COMP%] {\\n  color: whitesmoke;\\n}\\n\\n.form-group[_ngcontent-%COMP%] {\\n  margin-bottom: 1rem;\\n}\\n\\n.text-danger[_ngcontent-%COMP%] {\\n  color: red;\\n}\\n\\n.final-button[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: row;\\n}\\n\\nimg[_ngcontent-%COMP%] {\\n  width: 100% !important;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9wYXltZW50Ym9hcmQvcGF5bWVudGJvYXJkLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBO0VBQ0U7SUFDRSwwQkFBQTtJQUNBLFVBQUE7RUFERjtFQUlBO0lBQ0Usd0JBQUE7SUFDQSxVQUFBO0VBRkY7QUFDRjtBQUtBO0VBQ0Usc0NBQUE7RUFDQSx5QkFBQTtFQUNBLGFBQUE7QUFIRjtBQUtFO0VBQ0UsMkRBQUE7RUFDQSxtQkFBQTtFQUNBLG1CQUFBO0VBQ0Esa0JBQUE7RUFDQSxnQkFBQTtBQUhKO0FBTUU7RUFDRSxhQUFBO0VBQ0EsWUFBQTtFQUNBLGtCQUFBO0VBQ0EseUJBQUE7QUFKSjs7QUFRQTtFQUVFLGlCQUFBO0FBTkY7O0FBYUE7RUFDRSxtQkFBQTtBQVZGOztBQWFBO0VBQ0UsVUFBQTtBQVZGOztBQWFBO0VBQ0UsYUFBQTtFQUNBLG1CQUFBO0FBVkY7O0FBWUE7RUFDRSxzQkFBQTtBQVRGIiwic291cmNlc0NvbnRlbnQiOlsiLy8gQGltcG9ydCAnLi4vLi4vLi4vLi4vYXNzZXRzL3N0eWxlL21haW4uc2Nzcyc7XG5cbkBrZXlmcmFtZXMgc2xpZGVJblRvcEZhZGUge1xuICBmcm9tIHtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUlKTtcbiAgICBvcGFjaXR5OiAwO1xuICB9XG5cbiAgdG8ge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTtcbiAgICBvcGFjaXR5OiAxO1xuICB9XG59XG5cbi5wcm9maWxlIHtcbiAgYW5pbWF0aW9uOiBzbGlkZUluVG9wRmFkZSAwLjZzIGVhc2UtaW47XG4gIGJhY2tncm91bmQtY29sb3I6ICNmMWY1Zjk7XG4gIGhlaWdodDogMTAwdmg7XG5cbiAgLmhlYWRpbmcge1xuICAgIGZvbnQtZmFtaWx5OiAnSGVsdmV0aWNhIE5ldWUnLCBIZWx2ZXRpY2EsIEFyaWFsLCBzYW5zLXNlcmlmO1xuICAgIGxldHRlci1zcGFjaW5nOiAxcHg7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGRlcjtcbiAgICBmb250LXNpemU6IDIuMjVyZW07XG4gICAgbGluZS1oZWlnaHQ6IDEuMjtcbiAgfVxuXG4gIC5wcm9maWxlLXBpY3R1cmUge1xuICAgIGhlaWdodDogMTAwcHg7XG4gICAgd2lkdGg6IDEwMHB4O1xuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZDFkN2UwO1xuICB9XG59XG5cbmJ1dHRvbiB7XG4gIC8vIGJhY2tncm91bmQtY29sb3I6IHJnYigxNzksIDI0MCwgMjQ1KTtcbiAgY29sb3I6IHdoaXRlc21va2U7XG59XG5cbi8vIGJ1dHRvbjpob3ZlciB7XG4vLyAgIGJhY2tncm91bmQtY29sb3I6IGJsYWNrO1xuLy8gfVxuXG4uZm9ybS1ncm91cCB7XG4gIG1hcmdpbi1ib3R0b206IDFyZW07XG59XG5cbi50ZXh0LWRhbmdlciB7XG4gIGNvbG9yOiByZWQ7XG59XG5cbi5maW5hbC1idXR0b257XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7XG59XG5pbWd7XG4gIHdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7XG59XG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"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","names":["Validators","i0","PaymentboardComponent","constructor","formBuilder","service","firstName","lastName","email","ngOnInit","initiateForm","getUsers","userForm","group","user","required","token","amount","offers","onSubmit","valid","console","log","value","getAllUsers","subscribe","data","forEach","element","userData","push","name","getOffers","getAllOffers","added","offerData","get","checkAvailability","invalid","getTokens","patchValue","ifOffers","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/home/diptesh/Desktop/terminate/project/cashback-token-system/frontend/src/app/components/paymentboard/paymentboard.component.ts","/home/diptesh/Desktop/terminate/project/cashback-token-system/frontend/src/app/components/paymentboard/paymentboard.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { PaymentServiceService } from 'src/app/service/payment-service.service';\n\n\n@Component({\n  selector: 'app-paymentboard',\n  templateUrl: './paymentboard.component.html',\n  styleUrls: ['./paymentboard.component.scss']\n})\nexport class PaymentboardComponent {\n  userForm!: FormGroup;\n\n  userInfo = { firstName: 'Rohan', lastName: 'Parasad', email: 'rohan.prasad234@gmail.com' };\n  userData: { id: number; name: string; }[] = [];\n  offerData: { id: number; name: string; }[] = [];\n  ifAvailable: boolean = false;\n  added: boolean = false;\n  ifOffers:boolean = false;\n  constructor(\n    private formBuilder: FormBuilder,\n    private service: PaymentServiceService\n  ) {\n\n  }\n\n  ngOnInit(): void {\n    this.initiateForm();\n    this.getUsers();\n  }\n\n  initiateForm(): void {\n    this.userForm = this.formBuilder.group({\n      user: ['', Validators.required],\n      token: ['', Validators.required],\n      amount: ['', Validators.required],\n      offers: ['', Validators.required],\n\n    });\n  }\n\n  onSubmit(): void {\n    if (this.userForm.valid) {\n      // Form is valid, perform form submission or data handling logic\n      console.log(this.userForm.value);\n    }\n  }\n\n  getUsers() {\n    this.service.getAllUsers().subscribe((data: any) =>\n      data.forEach((element: any) => {\n\n        this.userData.push(element.name)\n\n      })\n    )\n  }\n\n  getOffers() {\n    this.service.getAllOffers().subscribe((data: any) =>\n      data.forEach((element: any) => {\n        if (!(this.added)) {\n          this.offerData.push(element.name)\n        }\n      })\n    )\n    this.added = true\n  }\n\n  get token() {\n    return this.userForm.get('token')\n  }\n\n\n  get amount() {\n    return this.userForm.get('amount')\n  }\n\n  checkAvailability() {\n    if ((this.amount?.invalid)) {\n      return false\n    }\n    else {\n      return true\n    }\n  }\n\n  getTokens() {\n    if(this.checkAvailability()){\n      this.userForm.patchValue({\n        token: 5\n      })\n      this.getOffers()\n      this.ifOffers = true\n    }\n    else{\n      this.ifOffers = false\n    }\n  }\n}\n","<div class=\"profile\" style=\"padding:80px ;\">\n<div class=\"card\" >\n  <div class=\"content-card p-5 pt-4\">\n    <div class=\"heading mb-3\">Account</div>\n    <div>\n      <!-- <div class=\"profile-picture\"></div> -->\n      <div class=\"form\">\n        <form class=\"userForm\" [formGroup]=\"userForm\" (ngSubmit)=\"onSubmit()\">\n          <div class=\"d-flex flex-lg-row flex-md-column gap-3\">\n          \n            <div class=\"gender form-group w-100\">\n              <label class=\"mb-2\" for=\"user\">Select Payee</label>\n              <div class=\"input-group\">\n                <div class=\"input-group-prepend\">\n                  <span class=\"input-group-text\">\n                    <i class=\"bi bi-person-circle\"></i>\n                  </span>\n                </div>\n                <select\n                  id=\"user\"\n                  class=\"form-control\"\n                  formControlName=\"user\"\n                  required\n                >\n                  <option *ngFor=\"let user of userData\" [value]=\"user\">\n                    {{ user }}\n                  </option>\n                </select>\n              </div>\n              <div\n                *ngIf=\"\n                  userForm.get('user')?.invalid && userForm.get('user')?.touched\n                \"\n                class=\"text-danger\"\n              >\n                Atleast one user is required.\n              </div>\n            </div>\n          </div>\n\n          <!-- address -->\n\n                    <!--amount-->\n\n                    <div class=\"address form-group w-100\">\n                        <label class=\"mb-2\" for=\"amount\">Amount</label>\n                        <div class=\"input-group\">\n                          <div class=\"input-group-prepend\">\n                            <span class=\"input-group-text\">\n                              <i class=\"bi bi-currency-rupee\"></i>\n                            </span>\n                          </div>\n                          <input\n                            type=\"text\"\n                            id=\"amount\"\n                            class=\"form-control\"\n                            formControlName=\"amount\"\n                            required\n                          />\n                        </div>\n                        <div\n                          *ngIf=\"\n                            userForm.get('amount')?.invalid &&\n                            userForm.get('amount')?.touched\n                          \"\n                          class=\"text-danger\"\n                        >\n                          Amount is required.\n                        </div>\n                      </div>\n\n   <button class=\"btn btn-info mt-3  btn-block\"\n                (click)= \"getTokens()\"> Check Offers </button>\n\n          <!-- token -->\n          <div *ngIf=\"ifOffers\" class=\"address form-group w-100\">\n            <label class=\"mb-2\" for=\"Token\">Cashback Token</label>\n            <div class=\"input-group\">\n              <div class=\"input-group-prepend\">\n                <span class=\"input-group-text\">\n                  <i class=\"bi bi-coin\"></i>\n                </span>\n              </div>\n              <input\n                type=\"text\"\n                id=\"token\"\n                class=\"form-control\"\n                formControlName=\"token\"\n                required\n              />\n            </div>\n            <div\n              *ngIf=\"\n                userForm.get('token')?.invalid && userForm.get('token')?.touched\n              \"\n              class=\"text-danger\"\n            >\n              Token is required.\n            </div>\n          </div>\n\n\n\n          <!-- <button class=\"btn btn-info mt-3  btn-block\"\n                (click)= \"checkAvailability()\"> Check Offers </button> -->\n          <!-- offers -->\n          <div *ngIf=\"ifOffers\" class=\"offers form-group w-100\">\n            <label class=\"mb-2\" for=\"offers\">Offers</label>\n            <div class=\"input-group\">\n              <div class=\"input-group-prepend\">\n                <span class=\"input-group-text\">\n                  <i class=\"bi bi-ticket-perforated\"></i>\n                </span>\n              </div>\n              <select\n                id=\"offers\"\n                class=\"form-control\"\n                formControlName=\"offers\"\n                placeholder=\"Select Available Offers\"\n                required\n              >\n                <!-- <option disabled selected >Select available Offers</option> -->\n                <option value=\"\" disabled selected>Select your option</option>\n                <option *ngFor=\"let offer of offerData\" [value]=\"offer\">\n                  {{ offer }}\n                </option>\n              </select>\n            </div>\n            <div\n              *ngIf=\"\n                userForm.get('offers')?.invalid &&\n                userForm.get('offers')?.touched\n              \"\n              class=\"text-danger\"\n            >\n              offers is required.\n            </div>\n          </div>\n          <!-- city -->\n\n          <div class=\"d-flex flex-lg-row flex-md-column gap-3\">\n            <!-- state -->\n\n            <!-- zip Code -->\n          </div>\n\n          <button\n            type=\"submit\"\n            class=\"btn btn-info mt-3 btn-block\"\n            data-bs-toggle=\"modal\"\n            data-bs-target=\"#exampleModal\"\n            [disabled]=\"userForm.invalid\"\n          >\n            Pay Now\n          </button>\n        </form>\n      </div>\n\n      <!-- Modal -->\n      <!-- Button trigger modal -->\n      <!-- <button type=\"button\" class=\"btn btn-primary\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\">\n    Launch demo modal\n  </button> -->\n\n\n    </div>\n  </div>\n</div>\n      <!-- Modal -->\n      <div\n        class=\"modal fade\"\n        id=\"exampleModal\"\n        tabindex=\"-1\"\n        aria-labelledby=\"exampleModalLabel\"\n        aria-hidden=\"true\"\n      >\n        <div class=\"modal-dialog modal-dialog-centered\">\n          <div class=\"modal-content\">\n            <!-- <div class=\"modal-header\">\n          <h1 class=\"modal-title fs-5\" id=\"exampleModalLabel\">Modal title</h1>\n          <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n        </div> -->\n            <div class=\"modal-body\">\n              <img src=\"../../../assets/success.gif\" alt=\"success\" />\n                <p>Payment Successful!!!</p>\n        \n            </div>\n            <!-- <div class=\"modal-footer\">\n          <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\n          <button type=\"button\" class=\"btn btn-primary\">Save changes</button>\n        </div> -->\n          </div>\n        </div>\n      </div>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}